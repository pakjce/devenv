#!/usr/bin/env bash
set -e -o pipefail

if [[ ! -z ${PYTHON_ENV_DIR} ]]; then
    PYTHON_ROOT=${PYTHON_ENV_DIR}
else
    if [[ $# -ne 1 ]]
    then
        echo "Python 환경이 있는 경로를 지정해주세요"
        echo "예) /usr/bin/python 인 경우: /usr 로 지정"
        echo "예) /opt/conda/bin/python 인 경우: /opt/conda 로 지정"
        exit 1
    fi
    PYTHON_ROOT=$1
fi
PYTHON_EXEC=${PYTHON_ROOT}/bin/python3
PIPENV_EXEC=${PYTHON_ROOT}/bin/pipenv

if [[ ! -d "${PYTHON_ROOT}/bin"  ]]
then
    echo "${PYTHON_ROOT}/bin 폴더가 존재하지 않습니다!"
    exit 1
fi

if [[ ! -e "${PYTHON_EXEC}" ]]
then
    echo "${PYTHON_EXEC} 가 존재하지 않습니다!"
    exit 1
fi

if [[ ! -e "${PIPENV_EXEC}" ]]
then
    echo "${PIPENV_EXEC} 가 존재하지 않습니다!"
    exit 1
fi

echo "+ PYTHON DIR: ${PYTHON_ROOT}"
echo "+ PYTHON EXEC: ${PYTHON_EXEC}"
echo "+ PIPENV EXEC: ${PIPENV_EXEC}"

rm -rf .venv

export PIPENV_VENV_IN_PROJECT=true
export PIPENV_IGNORE_VIRTUALENVS=1
${PIPENV_EXEC} --python ${PYTHON_EXEC}

LIB_LIST=$(ls ${PYTHON_ROOT}/lib/libpython*.*)
for libfile in $LIB_LIST
do
    FILENAME=$(basename ${libfile})
    if [[ ! -e .venv/lib/${FILENAME} ]]; then
        ln -sf ${libfile} .venv/lib/${FILENAME}
    fi
done
